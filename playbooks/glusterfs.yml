- name: Fill out hosts
  hosts: swarm
  become: true
  tasks:
    - name: Add alle hosts and ip to /etc/hosts
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: '{{ hostvars[item].ansible_default_ipv4.address }}.*{{ item }}$'
        line: "{{ hostvars[item].ansible_default_ipv4.address }} {{ hostvars[item].ansible_hostname }}"
        state: present
      become: true
      with_items: "{{ groups.swarm }}"

- name: Install Docker and GlusterFS dependencies
  hosts: swarm  # Targets the 'int_swarm' group of hosts
  become: true  # Elevates privileges
  tasks:
    - name: Install Docker and GlusterFS  # Descriptive name for a block of tasks
      block:  # Groups tasks together
        - name: Install required packages  # Installs dependencies for Docker and GlusterFS
          ansible.builtin.apt:  # Uses the apt module for package management
            name:  # Lists packages to be installed
              - ca-certificates
              - curl
              - gnupg
              - software-properties-common
              - glusterfs-server
              - apt-transport-https
            state: present  # Ensures packages are installed
            update_cache: true  # Updates the package cache first
    - name: Start and enable GlusterFS service  # Ensures the GlusterFS service is running
      ansible.builtin.service:
        name: glusterd
        state: started
        enabled: true

    - name: Ensure GlusterFS brick directories exist  # Creates directory for GlusterFS volume
      ansible.builtin.file:
        path: "/gluster/volume1"
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Allow connections on multiple ports
      ansible.builtin.iptables:
        chain: INPUT
        protocol: tcp
        destination_ports:
          - "22"
          - "24009"
          - "24007:24008"
        jump: ACCEPT

- name: Configure GlusterFS on first manager
  hosts: managers[0]  # Again targets the first manager for GlusterFS configuration
  become: true
  tasks:
    - name: Check if GlusterFS volume staging-gfs exists  # Checks for the existence of a GlusterFS volume
      ansible.builtin.command: gluster volume info staging-gfs
      register: volume_info
      ignore_errors: true
      changed_when: true

    - name: Probe GlusterFS peers and create volume  # Probes peers and creates a GlusterFS volume if not existing
      block:
        - name: Probe peers for GlusterFS
          ansible.builtin.command: gluster peer probe {{ item }}
          loop: "{{ groups['swarm'] }}"
          when: volume_info.rc != 0
          register: peer_probe
          changed_when: "'peer probe: success' in peer_probe.stdout"

        - name: Create GlusterFS volume
          ansible.builtin.shell:
            cmd: >
              gluster volume create staging-gfs replica {{ groups['swarm'] | length }}
              {%- for host in groups['swarm'] %}
              {{ hostvars[host]['inventory_hostname'] }}:/gluster/volume1
              {% endfor %}
              force
          when: volume_info.rc != 0
          register: volume_create
          changed_when: "'volume create: success' in volume_create.stdout"

        - name: Start GlusterFS volume
          ansible.builtin.command: gluster volume start staging-gfs
          when: volume_info.rc != 0
          register: volume_start
          changed_when: "'volume start: success' in volume_start.stdout"

- name: Mount GlusterFS on all Swarm nodes
  hosts: managers, workers  # Targets both managers and workers for GlusterFS mount
  become: true
  gather_facts: true
  tasks:
    - name: Ensure GlusterFS volume mounts on boot  # Configures fstab for the GlusterFS volume
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^localhost:/staging-gfs\s+/mnt\s+glusterfs'
        line: 'localhost:/staging-gfs /mnt glusterfs defaults,_netdev 0 0'
        create: true
        mode: '0644'

    - name: Mount GlusterFS volume immediately  # Mounts the GlusterFS volume
      ansible.posix.mount:
        path: /mnt
        src: 'localhost:/staging-gfs'
        fstype: glusterfs
        opts: defaults,_netdev
        state: mounted

    - name: Adjust permissions and ownership for GlusterFS mount  # Sets proper permissions for the mount
      ansible.builtin.file:
        path: /mnt
        owner: root
        group: docker
        state: directory
        recurse: true
